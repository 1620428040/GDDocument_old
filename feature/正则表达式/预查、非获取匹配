###获取匹配和非获取匹配
获取匹配的结果可以在Matches集合中找到

(pattern)	获取匹配		匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“\(”或“\)”。
(?:pattern)	非获取匹配		非获取匹配，匹配pattern但不获取匹配结果，不进行存储供以后使用。这在使用或字符“(|)”来组合一个模式的各个部分是很有用。例如“industr(?:y|ies)”就是一个比“industry|industries”更简略的表达式。


###预查
预查既不获取结果又不消耗字符。也就是说，在一个匹配发生后，在最后一次匹配之后立即开始下一次匹配的搜索，而不是从包含预查的字符之后开始。

非获取匹配，预查都是以"?"开头
"<"表示反向。正向指向后查找，写在要匹配的模式后面；反向指向前查找，写在前面
"="表示肯定,"!"表示否定。肯定的意思是筛选出符合该模式的；否定表示去掉符合该模式的

(?=pattern)	正向肯定预查	在任何匹配pattern的字符串开始处匹配查找字符串。例如，“Windows(?=95|98|NT|2000)”能匹配“Windows2000”中的“Windows”，但不能匹配“Windows3.1”中的“Windows”。
(?!pattern)	正向否定预查	在任何不匹配pattern的字符串开始处匹配查找字符串。例如“Windows(?!95|98|NT|2000)”能匹配“Windows3.1”中的“Windows”，但不能匹配“Windows2000”中的“Windows”。
(?<=pattern)反向肯定预查	与正向肯定预查类似，只是方向相反。例如，“(?<=95|98|NT|2000)Windows”能匹配“2000Windows”中的“Windows”，但不能匹配“3.1Windows”中的“Windows”。
(?<!pattern)反向否定预查	与正向否定预查类似，只是方向相反。例如“(?<!95|98|NT|2000)Windows”能匹配“3.1Windows”中的“Windows”，但不能匹配“2000Windows”中的“Windows”。

例子1：
给定边界条件的查找，但不会获取边界条件对应的字符串
(?<="|').{0,}?\.html(?="|')
查找被""或''扩起来的内容

例子2：查找"<反向>任意字符串<正向>"中的"任意字符串"
任意字符串(?=<正向>)	能查到
任意字符串(?!<正向>)	查不到
(?<=<反向>)任意字符串	能查到
(?<!<反向>)任意字符串	查不到


注意：使用[^(hide)]来排除包含单词"hide"的做法是错误的，这样做只能排除左右括号和hide四个字母。这种情况应该使用预查